// Foundation by ZURB
// foundation.zurb.com
// Licensed under MIT Open Source
// We use these to set the color of the pip in dropdown buttons
$dropdown-btn-pip-color: #fff;
$dropdown-btn-pip-color-alt: #fff;
// We use these to set the size of the pip in dropdown buttons
$button-pip-med: rem-calc(9) !default;
// We use these to style medium dropdown buttons
$dropdown-btn-padding-med: $button-pip-med * 6 + rem-calc(3) !default;
$dropdown-btn-pip-size-med: $button-pip-med - rem-calc(3) !default;
$dropdown-btn-pip-opposite-med: $button-pip-med * 2.5 !default;
$dropdown-btn-pip-top-med: (-$button-pip-med / 2) + rem-calc(2) !default;
// @mixins
//
// Dropdown Button Mixin
//
// We use this mixin to build off of the button mixin and add dropdown button styles
//
// $padding - Determines the size of button you're working with. Default: medium. Options [tiny, small, medium, large]
// $pip-color - Color of the little triangle that points to the dropdown. Default: $white.
// $base-style - Add in base-styles. This can be set to false. Default:true
@mixin dropdown-btn($padding:medium, $pip-color:$dropdown-btn-pip-color, $base-style:true) {
    // We add in base styles, but they can be negated by setting to 'false'.
    @if $base-style {
        position: relative;
        padding-#{$opposite-direction}: $dropdown-btn-padding-med;
        // This creates the base styles for the triangle pip
        &::after {
            border-color: $dropdown-btn-pip-color transparent transparent transparent;
            border-style: solid;
            content: "";
            display: block;
            height: 0;
            position: absolute;
            top: 50%;
            width: 0;
            border-width: $dropdown-btn-pip-size-med;
            #{$opposite-direction}: $dropdown-btn-pip-opposite-med;
            margin-top: $dropdown-btn-pip-top-med;
        }
    }
    // We can control the pip color. We didn't use logic in this case, just set it and forget it.
    @if $pip-color {
        &::after {
            border-color: $pip-color transparent transparent transparent;
        }
    }
    &:hover {
      background-color: $primary-button-background-color;
      color: #fff;
    }
}

@include exports("dropdown-btn") {
    .c-btn-dropdown.c-btn,
    button.c-btn {
        @include dropdown-btn;
    }
}
